# add a graph statement
#graph [nodesep = 0.1]
}
")
grVizOutput(boxes_and_circles)
library(DiagrammeR)
grViz("
test <- digraph boxes_and_circles {
rankdir=LR
# add node statements
node [shape = circle
#fontname = helvetica
#pendwidth = 2.0
]
App; Runoff; Drains; Infil;
node [shape = square]
Plot; Outlet; GW
# add edge statements
#edge [arrowhead = dimond]
App -> Plot ; # [label = ' App.' ];
Plot -> Runoff ; #[label = ' Run-off'];
Plot -> Drains ; # [label = ' Drainage' ];
Plot -> Infil ;  #[label = ' Infil.' ]
Plot -> Uptake;
Plot -> Sorption;
Plot -> Degradation;
Runoff -> Outlet ;
Drains -> Outlet ; #[label = ' Channels' ]
Infil -> Outlet ; #[label = ' Base flow.' ]
Infil -> GW;
# add a graph statement
#graph [nodesep = 0.1]
}
")
grVizOutput(test)
test <- digraph {
rankdir=LR
# add node statements
node [shape = circle
#fontname = helvetica
#pendwidth = 2.0
]
App; Runoff; Drains; Infil;
node [shape = square]
Plot; Outlet; GW
# add edge statements
#edge [arrowhead = dimond]
App -> Plot ; # [label = ' App.' ];
Plot -> Runoff ; #[label = ' Run-off'];
Plot -> Drains ; # [label = ' Drainage' ];
Plot -> Infil ;  #[label = ' Infil.' ]
Plot -> Uptake;
Plot -> Sorption;
Plot -> Degradation;
Runoff -> Outlet ;
Drains -> Outlet ; #[label = ' Channels' ]
Infil -> Outlet ; #[label = ' Base flow.' ]
Infil -> GW;
# add a graph statement
#graph [nodesep = 0.1]
}
")
library(DiagrammeR)
grViz("
test <- digraph {
rankdir=LR
# add node statements
node [shape = circle
#fontname = helvetica
#pendwidth = 2.0
]
App; Runoff; Drains; Infil;
node [shape = square]
Plot; Outlet; GW
# add edge statements
#edge [arrowhead = dimond]
App -> Plot ; # [label = ' App.' ];
Plot -> Runoff ; #[label = ' Run-off'];
Plot -> Drains ; # [label = ' Drainage' ];
Plot -> Infil ;  #[label = ' Infil.' ]
Plot -> Uptake;
Plot -> Sorption;
Plot -> Degradation;
Runoff -> Outlet ;
Drains -> Outlet ; #[label = ' Channels' ]
Infil -> Outlet ; #[label = ' Base flow.' ]
Infil -> GW;
# add a graph statement
#graph [nodesep = 0.1]
}
")
grVizOutput(test)
grViz("
test <- digraph {
rankdir=LR
# add node statements
node [shape = circle
#fontname = helvetica
#pendwidth = 2.0
]
App; Runoff; Drains; Infil;
node [shape = square]
Plot; Outlet; GW
# add edge statements
#edge [arrowhead = dimond]
App -> Plot ; # [label = ' App.' ];
Plot -> Runoff ; #[label = ' Run-off'];
Plot -> Drains ; # [label = ' Drainage' ];
Plot -> Infil ;  #[label = ' Infil.' ]
Plot -> Uptake;
Plot -> Sorption;
Plot -> Degradation;
Runoff -> Outlet ;
Drains -> Outlet ; #[label = ' Channels' ]
Infil -> Outlet ; #[label = ' Base flow.' ]
Infil -> GW;
# add a graph statement
#graph [nodesep = 0.1]
}
")
library(DiagrammeR)
grViz("
test <- digraph name {
rankdir=LR
# add node statements
node [shape = circle
#fontname = helvetica
#pendwidth = 2.0
]
App; Runoff; Drains; Infil;
node [shape = square]
Plot; Outlet; GW
# add edge statements
#edge [arrowhead = dimond]
App -> Plot ; # [label = ' App.' ];
Plot -> Runoff ; #[label = ' Run-off'];
Plot -> Drains ; # [label = ' Drainage' ];
Plot -> Infil ;  #[label = ' Infil.' ]
Plot -> Uptake;
Plot -> Sorption;
Plot -> Degradation;
Runoff -> Outlet ;
Drains -> Outlet ; #[label = ' Channels' ]
Infil -> Outlet ; #[label = ' Base flow.' ]
Infil -> GW;
# add a graph statement
#graph [nodesep = 0.1]
}
")
test <- grViz("
digraph name {
rankdir=LR
# add node statements
node [shape = circle
#fontname = helvetica
#pendwidth = 2.0
]
App; Runoff; Drains; Infil;
node [shape = square]
Plot; Outlet; GW
# add edge statements
#edge [arrowhead = dimond]
App -> Plot ; # [label = ' App.' ];
Plot -> Runoff ; #[label = ' Run-off'];
Plot -> Drains ; # [label = ' Drainage' ];
Plot -> Infil ;  #[label = ' Infil.' ]
Plot -> Uptake;
Plot -> Sorption;
Plot -> Degradation;
Runoff -> Outlet ;
Drains -> Outlet ; #[label = ' Channels' ]
Infil -> Outlet ; #[label = ' Base flow.' ]
Infil -> GW;
# add a graph statement
#graph [nodesep = 0.1]
}
")
grVizOutput(test)
pwd()
cwd()
cd()
wd()
cwd()
grVizOutput('test')
library(DiagrammeR)
grViz("
digraph name {
rankdir=LR
# add node statements
node [shape = circle
#fontname = helvetica
#pendwidth = 2.0
]
App; Runoff; Drains; Infil;
node [shape = square]
Plot; Outlet; GW
# add edge statements
#edge [arrowhead = dimond]
App -> Plot ; # [label = ' App.' ];
Plot -> Runoff ; #[label = ' Run-off'];
Plot -> Drains ; # [label = ' Drainage' ];
Plot -> Infil ;  #[label = ' Infil.' ]
Plot -> Uptake;
Plot -> Sorption;
Plot -> Degradation;
Runoff -> Outlet ;
Drains -> Outlet ; #[label = ' Channels' ]
Infil -> Outlet ; #[label = ' Base flow.' ]
Infil -> GW;
# add a graph statement
#graph [nodesep = 0.1]
}
")
library(png)
shiny::runApp('Documents/PhD/InteractiveApps/Alteck-app')
te <- data.frame(xmin = as.POSIXct('2016-03-25 12:04:00'),
xmax = as.POSIXct('2016-03-29 06:04:00'),
ymin = 0.0,
ymax = 5.0)
te
shiny::runApp('Documents/PhD/InteractiveApps/Alteck-app')
hydro <- read.csv2("groupAlteck2016_R.csv")
setwd("/Users/DayTightChunks/Documents/PhD/InteractiveApps/Alteck-app/data")
hydro <- read.csv2("groupAlteck2016_R.csv")
library("dplyr")
library("ggplot2")
library("scales")
library("ggrepel")
AOdf = read.csv2("AOdataframe_R.csv")
AOdf$WeekSubWeek <- as.character(AOdf$WeekSubWeek)
AOdf$WeekSubWeek <- factor(AOdf$WeekSubWeek, levels = unique(AOdf$WeekSubWeek))
AOdf$Weeks <- factor(AOdf$Weeks, levels = unique(AOdf$Weeks))
AOdf$ti <- as.POSIXct(strptime(AOdf$ti, "%Y-%m-%d %H:%M", tz="CET"))
ggplot(hydro, aes(Date, Qfor)) +
geom_line(data=hydro[hydro$Type=="Discharge", ],  aes(color=Type, group = Type)) +
geom_point(data=hydro[hydro$Type=="Sample",], aes(colour=Type, group=Type)) +
#geom_point(data=hydro2()[hydro2()$Weeks==input$weeks,], aes(colour=Type, group=Type)) +
scale_colour_manual(values=c("blue", "red")) +
scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,1000)) +
#theme_bw() +
scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%d/%m")) +
xlab("Date") +
ylab(expression((m^3*.h^-1))) +
theme(legend.position=c(.01, .8)) +
theme(legend.justification = c(0,0))+
#theme(plot.margin = unit(c(1,1,-1.2,1), "lines")) +
theme(legend.title=element_blank())
hydro$Date = as.POSIXct(strptime(hydro$Date, "%Y-%m-%d %H:%M", tz="CET"))
ggplot(hydro, aes(Date, Qfor)) +
geom_line(data=hydro[hydro$Type=="Discharge", ],  aes(color=Type, group = Type)) +
geom_point(data=hydro[hydro$Type=="Sample",], aes(colour=Type, group=Type)) +
#geom_point(data=hydro2()[hydro2()$Weeks==input$weeks,], aes(colour=Type, group=Type)) +
scale_colour_manual(values=c("blue", "red")) +
scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,1000)) +
#theme_bw() +
scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%d/%m")) +
xlab("Date") +
ylab(expression((m^3*.h^-1))) +
theme(legend.position=c(.01, .8)) +
theme(legend.justification = c(0,0))+
#theme(plot.margin = unit(c(1,1,-1.2,1), "lines")) +
theme(legend.title=element_blank())
ggplot(hydro, aes(Date, Qfor)) +
geom_line(data=hydro[hydro$Type=="Discharge", ],  aes(color=Type, group = Type)) +
geom_point(data=hydro[hydro$Type=="Sample",], aes(colour=Type, group=Type)) +
#geom_point(data=hydro2()[hydro2()$Weeks==input$weeks,], aes(colour=Type, group=Type)) +
scale_colour_manual(values=c("blue", "red")) +
scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,1000)) +
#theme_bw() +
scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%d/%m")) +
xlab("Date") +
ylab(expression((m^3*.h^-1))) +
theme(legend.position=c(.01, .8)) +
theme(legend.justification = c(0,0))+
#theme(plot.margin = unit(c(1,1,-1.2,1), "lines")) +
theme(legend.title=element_blank()) +
geom_rect(data=rectangles, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='grey80', alpha=0.8)
ggplot(hydro, aes(Date, Qfor)) +
geom_line(data=hydro[hydro$Type=="Discharge", ],  aes(color=Type, group = Type)) +
geom_point(data=hydro[hydro$Type=="Sample",], aes(colour=Type, group=Type)) +
#geom_point(data=hydro2()[hydro2()$Weeks==input$weeks,], aes(colour=Type, group=Type)) +
scale_colour_manual(values=c("blue", "red")) +
scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,1000)) +
#theme_bw() +
scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%d/%m")) +
xlab("Date") +
ylab(expression((m^3*.h^-1))) +
theme(legend.position=c(.01, .8)) +
theme(legend.justification = c(0,0))+
#theme(plot.margin = unit(c(1,1,-1.2,1), "lines")) +
theme(legend.title=element_blank()) +
geom_rect(data=te, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='grey80', alpha=0.8)
ggplot(hydro, aes(hydro$Date, hydro$Qfor)) +
geom_line(data=hydro[hydro$Type=="Discharge", ],  aes(color=Type, group = Type)) +
geom_point(data=hydro[hydro$Type=="Sample",], aes(colour=Type, group=Type)) +
#geom_point(data=hydro2()[hydro2()$Weeks==input$weeks,], aes(colour=Type, group=Type)) +
scale_colour_manual(values=c("blue", "red")) +
scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,1000)) +
#theme_bw() +
scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%d/%m")) +
xlab("Date") +
ylab(expression((m^3*.h^-1))) +
theme(legend.position=c(.01, .8)) +
theme(legend.justification = c(0,0))+
#theme(plot.margin = unit(c(1,1,-1.2,1), "lines")) +
theme(legend.title=element_blank()) +
geom_rect(data=te, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='grey80', alpha=0.8)
ggplot() +
geom_line(data=hydro[hydro$Type=="Discharge", ],  aes(color=Type, group = Type)) +
geom_point(data=hydro[hydro$Type=="Sample",], aes(colour=Type, group=Type)) +
#geom_point(data=hydro2()[hydro2()$Weeks==input$weeks,], aes(colour=Type, group=Type)) +
scale_colour_manual(values=c("blue", "red")) +
scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,1000)) +
#theme_bw() +
scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%d/%m")) +
xlab("Date") +
ylab(expression((m^3*.h^-1))) +
theme(legend.position=c(.01, .8)) +
theme(legend.justification = c(0,0))+
#theme(plot.margin = unit(c(1,1,-1.2,1), "lines")) +
theme(legend.title=element_blank()) +
geom_rect(data=te, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='grey80', alpha=0.8)
View(hydro)
ggplot(hydro, aes("Date", "Qfor")) +
geom_line(data=hydro[hydro$Type=="Discharge", ],  aes(color=Type, group = Type)) +
geom_point(data=hydro[hydro$Type=="Sample",], aes(colour=Type, group=Type)) +
#geom_point(data=hydro2()[hydro2()$Weeks==input$weeks,], aes(colour=Type, group=Type)) +
scale_colour_manual(values=c("blue", "red")) +
scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,1000)) +
#theme_bw() +
scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%d/%m")) +
xlab("Date") +
ylab(expression((m^3*.h^-1))) +
theme(legend.position=c(.01, .8)) +
theme(legend.justification = c(0,0))+
#theme(plot.margin = unit(c(1,1,-1.2,1), "lines")) +
theme(legend.title=element_blank())
ggplot(hydro, aes("Date", "Qfor")) +
geom_line(data=hydro[hydro$Type=="Discharge", ],  aes(color=Type, group = Type)) +
geom_point(data=hydro[hydro$Type=="Sample",], aes(colour=Type, group=Type)) +
#geom_point(data=hydro2()[hydro2()$Weeks==input$weeks,], aes(colour=Type, group=Type)) +
scale_colour_manual(values=c("blue", "red")) +
#scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,1000)) +
#theme_bw() +
scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%d/%m")) +
xlab("Date") +
ylab(expression((m^3*.h^-1))) +
theme(legend.position=c(.01, .8)) +
theme(legend.justification = c(0,0))+
#theme(plot.margin = unit(c(1,1,-1.2,1), "lines")) +
theme(legend.title=element_blank())
ggplot(hydro, aes(Date, Qfor)) +
geom_line(data=hydro[hydro$Type=="Discharge", ],  aes(color=Type, group = Type)) +
geom_point(data=hydro[hydro$Type=="Sample",], aes(colour=Type, group=Type)) +
#geom_point(data=hydro2()[hydro2()$Weeks==input$weeks,], aes(colour=Type, group=Type)) +
scale_colour_manual(values=c("blue", "red")) +
scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,1000)) +
#theme_bw() +
scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%d/%m")) +
xlab("Date") +
ylab(expression((m^3*.h^-1))) +
theme(legend.position=c(.01, .8)) +
theme(legend.justification = c(0,0))+
#theme(plot.margin = unit(c(1,1,-1.2,1), "lines")) +
theme(legend.title=element_blank())
ggplot(hydro, aes(Date, Qfor)) +
geom_line(data=hydro[hydro$Type=="Discharge", ],  aes(color=Type, group = Type)) +
geom_point(data=hydro[hydro$Type=="Sample",], aes(colour=Type, group=Type)) +
#geom_point(data=hydro2()[hydro2()$Weeks==input$weeks,], aes(colour=Type, group=Type)) +
scale_colour_manual(values=c("blue", "red")) +
scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,1000)) +
#theme_bw() +
scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%d/%m")) +
xlab("Date") +
ylab(expression((m^3*.h^-1))) +
theme(legend.position=c(.01, .8)) +
theme(legend.justification = c(0,0))+
#theme(plot.margin = unit(c(1,1,-1.2,1), "lines")) +
theme(legend.title=element_blank()) +
geom_rect(data=te, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='grey80', alpha=0.8)
ggplot(hydro, aes(Date, Qfor)) +
geom_rect(data=te, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='grey80', alpha=0.8) +
geom_line(data=hydro[hydro$Type=="Discharge", ],  aes(color=Type, group = Type)) +
geom_point(data=hydro[hydro$Type=="Sample",], aes(colour=Type, group=Type)) +
#geom_point(data=hydro2()[hydro2()$Weeks==input$weeks,], aes(colour=Type, group=Type)) +
scale_colour_manual(values=c("blue", "red")) +
scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,1000)) +
#theme_bw() +
scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%d/%m")) +
xlab("Date") +
ylab(expression((m^3*.h^-1))) +
theme(legend.position=c(.01, .8)) +
theme(legend.justification = c(0,0))+
#theme(plot.margin = unit(c(1,1,-1.2,1), "lines")) +
theme(legend.title=element_blank())
ggplot(hydro, aes(Date, Qfor)) +
#geom_line(data=hydro[hydro$Type=="Discharge", ],  aes(color=Type, group = Type)) +
#geom_point(data=hydro[hydro$Type=="Sample",], aes(colour=Type, group=Type)) +
#geom_point(data=hydro2()[hydro2()$Weeks==input$weeks,], aes(colour=Type, group=Type)) +
scale_colour_manual(values=c("blue", "red")) +
scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,1000)) +
#theme_bw() +
scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%d/%m")) +
xlab("Date") +
ylab(expression((m^3*.h^-1))) +
theme(legend.position=c(.01, .8)) +
theme(legend.justification = c(0,0))+
#theme(plot.margin = unit(c(1,1,-1.2,1), "lines")) +
theme(legend.title=element_blank()) +
geom_rect(data=te, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='grey80', alpha=0.8)
ggplot(hydro, aes(Date, Qfor)) +
#geom_line(data=hydro[hydro$Type=="Discharge", ],  aes(color=Type, group = Type)) +
#geom_point(data=hydro[hydro$Type=="Sample",], aes(colour=Type, group=Type)) +
#geom_point(data=hydro2()[hydro2()$Weeks==input$weeks,], aes(colour=Type, group=Type)) +
scale_colour_manual(values=c("blue", "red")) +
scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,1000)) +
#theme_bw() +
scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%d/%m")) +
xlab("Date") +
ylab(expression((m^3*.h^-1))) +
theme(legend.position=c(.01, .8)) +
theme(legend.justification = c(0,0))+
#theme(plot.margin = unit(c(1,1,-1.2,1), "lines")) +
theme(legend.title=element_blank())
ggplot(hydro, aes(Date, Qfor)) +
#geom_line(data=hydro[hydro$Type=="Discharge", ],  aes(color=Type, group = Type)) +
#geom_point(data=hydro[hydro$Type=="Sample",], aes(colour=Type, group=Type)) +
#geom_point(data=hydro2()[hydro2()$Weeks==input$weeks,], aes(colour=Type, group=Type)) +
scale_colour_manual(values=c("blue", "red")) +
scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,1000)) +
#theme_bw() +
scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%d/%m")) +
xlab("Date") +
ylab(expression((m^3*.h^-1))) +
theme(legend.position=c(.01, .8)) +
theme(legend.justification = c(0,0))+
#theme(plot.margin = unit(c(1,1,-1.2,1), "lines")) +
theme(legend.title=element_blank()) +
geom_rect(data=te, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='grey80', alpha=0.8)
hydroTest = data.frame(my_x_series = hydro$Date, my_y_series= hydro$Qfor)
hydroTest = data.frame(my_x_series = hydro$Date, my_y_series= hydro$Qfor)
ggplot() +
geom_rect(data=te, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='grey80', alpha=0.8) +
geom_line(data=hydroTest,  aes(x=my_x_series, y=my_y_series)) +
#geom_point(data=hydro[hydro$Type=="Sample",], aes(colour=Type, group=Type)) +
#geom_point(data=hydro2()[hydro2()$Weeks==input$weeks,], aes(colour=Type, group=Type)) +
scale_colour_manual(values=c("blue", "red")) +
scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,1000)) +
#theme_bw() +
scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%d/%m")) +
xlab("Date") +
ylab(expression((m^3*.h^-1))) +
theme(legend.position=c(.01, .8)) +
theme(legend.justification = c(0,0))+
#theme(plot.margin = unit(c(1,1,-1.2,1), "lines")) +
theme(legend.title=element_blank())
ggplot() +
geom_rect(data=te, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='grey80', alpha=0.8) +
geom_line(data=hydroTest,  aes(x=my_x_series, y=my_y_series), color="blue") +
#geom_point(data=hydro[hydro$Type=="Sample",], aes(colour=Type, group=Type)) +
#geom_point(data=hydro2()[hydro2()$Weeks==input$weeks,], aes(colour=Type, group=Type)) +
scale_colour_manual(values=c("blue", "red")) +
scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,1000)) +
#theme_bw() +
scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%d/%m")) +
xlab("Date") +
ylab(expression((m^3*.h^-1))) +
theme(legend.position=c(.01, .8)) +
theme(legend.justification = c(0,0))+
#theme(plot.margin = unit(c(1,1,-1.2,1), "lines")) +
theme(legend.title=element_blank())
library("dplyr")
hydroSamples <- subset(hydro, Type == "Sample")
View(hydroSamples)
hydroSamples <- subset(hydro, Type == "Sample")
hydroSamples <- data.frame(my_x_samples = hydroSamples$Date, my_y_samples= hydroSamples$Qfor)
ggplot() +
geom_rect(data=te, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='grey80', alpha=0.8) +
geom_line(data=hydroFlux,  aes(x=my_x_series, y=my_y_series), color="blue") +
geom_point(data=hydroSamples, aes(x=my_x_samples, y=my_y_samples), color="red")+
#geom_point(data=hydro[hydro$Type=="Sample",], aes(colour=Type, group=Type)) +
#geom_point(data=hydro2()[hydro2()$Weeks==input$weeks,], aes(colour=Type, group=Type)) +
scale_colour_manual(values=c("blue", "red")) +
scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,1000)) +
#theme_bw() +
scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%d/%m")) +
xlab("Date") +
ylab(expression((m^3*.h^-1))) +
theme(legend.position=c(.01, .8)) +
theme(legend.justification = c(0,0))+
#theme(plot.margin = unit(c(1,1,-1.2,1), "lines")) +
theme(legend.title=element_blank())
hydroFlux = data.frame(my_x_series = hydro$Date, my_y_series= hydro$Qfor)
ggplot() +
geom_rect(data=te, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill='grey80', alpha=0.8) +
geom_line(data=hydroFlux,  aes(x=my_x_series, y=my_y_series), color="blue") +
geom_point(data=hydroSamples, aes(x=my_x_samples, y=my_y_samples), color="red")+
#geom_point(data=hydro[hydro$Type=="Sample",], aes(colour=Type, group=Type)) +
#geom_point(data=hydro2()[hydro2()$Weeks==input$weeks,], aes(colour=Type, group=Type)) +
scale_colour_manual(values=c("blue", "red")) +
scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,1000)) +
#theme_bw() +
scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%d/%m")) +
xlab("Date") +
ylab(expression((m^3*.h^-1))) +
theme(legend.position=c(.01, .8)) +
theme(legend.justification = c(0,0))+
#theme(plot.margin = unit(c(1,1,-1.2,1), "lines")) +
theme(legend.title=element_blank())
shiny::runApp('~/Documents/PhD/InteractiveApps/Alteck-app')
shiny::runApp('~/Documents/PhD/InteractiveApps/Alteck-app')
shiny::runApp('~/Documents/PhD/InteractiveApps/Alteck-app')
